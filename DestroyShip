Procedure DestroyShip(Const Coord: TCoordinates; Var StateOfBattleFieldUser, StateShipsUser: TMatrix);
Var
    NumOfShip, LengthOfShip: Integer;
    CurentCoord: TCoordinates;
Begin
    For Var I := 0 To 7 Do
        For Var J := 0 To 9 Do
            If I Mod 2 = 1 Then
                Break
            Else
                If (Coord[1] = StateShipsUser[I, J]) And (Coord[2] = StateShipsUser[I + 1, J]) Then
                Begin
                    NumOfShip := J;
                    LengthOfShip := StateShipsUser[0, J];
                    Break
                End;
    For Var J := LengthOfShip - 1 Downto 0 Do
    Begin
        CurentCoord[1] := StateShipsUser[J * 2, NumOfShip];
        CurentCoord[2] := StateShipsUser[J * 2 + 1, NumOfShip];
        StateOfBattleFieldUser[CurentCoord[1], CurentCoord[2]] := -6;
        StateOfBattleFieldUser[CurentCoord[1] - 1, CurentCoord[2] - 1] := -5;
        StateOfBattleFieldUser[CurentCoord[1] - 1, CurentCoord[2] + 1] := -5;
        StateOfBattleFieldUser[CurentCoord[1] + 1, CurentCoord[2] + 1] := -5;
        StateOfBattleFieldUser[CurentCoord[1] + 1, CurentCoord[2] - 1] := -5;
        If StateOfBattleFieldUser[CurentCoord[1], CurentCoord[2] - 1] <> -6 Then
            StateOfBattleFieldUser[CurentCoord[1], CurentCoord[2] - 1] := -5;
        If StateOfBattleFieldUser[CurentCoord[1] - 1, CurentCoord[2]] <> -6 Then
            StateOfBattleFieldUser[CurentCoord[1] - 1, CurentCoord[2]] := -5;
        If StateOfBattleFieldUser[CurentCoord[1], CurentCoord[2] + 1] <> -6 Then
            StateOfBattleFieldUser[CurentCoord[1], CurentCoord[2] + 1] := -5;
        If StateOfBattleFieldUser[CurentCoord[1] + 1, CurentCoord[2]] <> -6 Then
            StateOfBattleFieldUser[CurentCoord[1] + 1, CurentCoord[2]] := -5
    End;
End;
